<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: apis/iam/user/v1alpha/user.proto

namespace Sugarcrm\Apis\Iam\User\V1alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Address object as per Openid Connect:
 * https://openid.net/specs/openid-connect-basic-1_0.html#AddressClaim
 *
 * Generated from protobuf message <code>sugarcrm.apis.iam.user.v1alpha.Address</code>
 */
class Address extends \Google\Protobuf\Internal\Message
{
    /**
     * Full street address component, which MAY include house number, street
     * name, Post Office Box, and multi-line extended street address
     * information. This field MAY contain multiple lines, separated by
     * newlines. Newlines can be represented either as a carriage return/line
     * feed pair ("\r\n") or as a single line feed character ("\n").
     * Sugar field mapping: `users.address_street`
     *
     * Generated from protobuf field <code>string street_address = 1;</code>
     */
    private $street_address = '';
    /**
     * City or locality component.
     * Sugar field mapping: `users.address_city`
     *
     * Generated from protobuf field <code>string locality = 2;</code>
     */
    private $locality = '';
    /**
     * State, province, prefecture, or region component.
     * Sugar field mapping: `users.address_state`
     *
     * Generated from protobuf field <code>string region = 3;</code>
     */
    private $region = '';
    /**
     * Zip code or postal code component.
     * Sugar field mapping: `users.address_postalcode`
     *
     * Generated from protobuf field <code>string postal_code = 4;</code>
     */
    private $postal_code = '';
    /**
     * Country name component.
     * Sugar field mapping: `users.address_country`
     *
     * Generated from protobuf field <code>string country = 5;</code>
     */
    private $country = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $street_address
     *           Full street address component, which MAY include house number, street
     *           name, Post Office Box, and multi-line extended street address
     *           information. This field MAY contain multiple lines, separated by
     *           newlines. Newlines can be represented either as a carriage return/line
     *           feed pair ("\r\n") or as a single line feed character ("\n").
     *           Sugar field mapping: `users.address_street`
     *     @type string $locality
     *           City or locality component.
     *           Sugar field mapping: `users.address_city`
     *     @type string $region
     *           State, province, prefecture, or region component.
     *           Sugar field mapping: `users.address_state`
     *     @type string $postal_code
     *           Zip code or postal code component.
     *           Sugar field mapping: `users.address_postalcode`
     *     @type string $country
     *           Country name component.
     *           Sugar field mapping: `users.address_country`
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Apis\Iam\User\V1Alpha\User::initOnce();
        parent::__construct($data);
    }

    /**
     * Full street address component, which MAY include house number, street
     * name, Post Office Box, and multi-line extended street address
     * information. This field MAY contain multiple lines, separated by
     * newlines. Newlines can be represented either as a carriage return/line
     * feed pair ("\r\n") or as a single line feed character ("\n").
     * Sugar field mapping: `users.address_street`
     *
     * Generated from protobuf field <code>string street_address = 1;</code>
     * @return string
     */
    public function getStreetAddress()
    {
        return $this->street_address;
    }

    /**
     * Full street address component, which MAY include house number, street
     * name, Post Office Box, and multi-line extended street address
     * information. This field MAY contain multiple lines, separated by
     * newlines. Newlines can be represented either as a carriage return/line
     * feed pair ("\r\n") or as a single line feed character ("\n").
     * Sugar field mapping: `users.address_street`
     *
     * Generated from protobuf field <code>string street_address = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setStreetAddress($var)
    {
        GPBUtil::checkString($var, True);
        $this->street_address = $var;

        return $this;
    }

    /**
     * City or locality component.
     * Sugar field mapping: `users.address_city`
     *
     * Generated from protobuf field <code>string locality = 2;</code>
     * @return string
     */
    public function getLocality()
    {
        return $this->locality;
    }

    /**
     * City or locality component.
     * Sugar field mapping: `users.address_city`
     *
     * Generated from protobuf field <code>string locality = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setLocality($var)
    {
        GPBUtil::checkString($var, True);
        $this->locality = $var;

        return $this;
    }

    /**
     * State, province, prefecture, or region component.
     * Sugar field mapping: `users.address_state`
     *
     * Generated from protobuf field <code>string region = 3;</code>
     * @return string
     */
    public function getRegion()
    {
        return $this->region;
    }

    /**
     * State, province, prefecture, or region component.
     * Sugar field mapping: `users.address_state`
     *
     * Generated from protobuf field <code>string region = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setRegion($var)
    {
        GPBUtil::checkString($var, True);
        $this->region = $var;

        return $this;
    }

    /**
     * Zip code or postal code component.
     * Sugar field mapping: `users.address_postalcode`
     *
     * Generated from protobuf field <code>string postal_code = 4;</code>
     * @return string
     */
    public function getPostalCode()
    {
        return $this->postal_code;
    }

    /**
     * Zip code or postal code component.
     * Sugar field mapping: `users.address_postalcode`
     *
     * Generated from protobuf field <code>string postal_code = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setPostalCode($var)
    {
        GPBUtil::checkString($var, True);
        $this->postal_code = $var;

        return $this;
    }

    /**
     * Country name component.
     * Sugar field mapping: `users.address_country`
     *
     * Generated from protobuf field <code>string country = 5;</code>
     * @return string
     */
    public function getCountry()
    {
        return $this->country;
    }

    /**
     * Country name component.
     * Sugar field mapping: `users.address_country`
     *
     * Generated from protobuf field <code>string country = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setCountry($var)
    {
        GPBUtil::checkString($var, True);
        $this->country = $var;

        return $this;
    }

}

