<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: apis/iam/provider/v1alpha/provider.proto

namespace Sugarcrm\Apis\Iam\Provider\V1alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>sugarcrm.apis.iam.provider.v1alpha.SamlConfig</code>
 */
class SamlConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * IDP single sign on url (Login URL)
     *
     * Generated from protobuf field <code>string idp_sso_url = 1;</code>
     */
    private $idp_sso_url = '';
    /**
     * IDP single log out URL
     *
     * Generated from protobuf field <code>string idp_slo_url = 2;</code>
     */
    private $idp_slo_url = '';
    /**
     * Identifier of the IdP entity, should be a valid URI.
     *
     * Generated from protobuf field <code>string idp_entity_id = 3;</code>
     */
    private $idp_entity_id = '';
    /**
     * Identifier of the Service Provider entity should be a valid URI
     *
     * Generated from protobuf field <code>string sp_entity_id = 4;</code>
     */
    private $sp_entity_id = '';
    /**
     * X509 PEM-encoded certificate
     *
     * Generated from protobuf field <code>string x509_cert = 5;</code>
     */
    private $x509_cert = '';
    /**
     * If the authenticated user does not exist one will be created using the
     * bind attribute as `User.sub_id`.
     *
     * Generated from protobuf field <code>bool provision_user = 6;</code>
     */
    private $provision_user = false;
    /**
     * This option will load SAML login screen in the same window to avoid
     * pop-up blocking.
     *
     * Generated from protobuf field <code>bool same_window = 7;</code>
     */
    private $same_window = false;
    /**
     * PEM-encoded private key to be used for AuthN/Logout request signing.
     *
     * Generated from protobuf field <code>string request_signing_pkey = 8;</code>
     */
    private $request_signing_pkey = '';
    /**
     * PEM-encoded X509 certificate to be used for AuthN/Logout request signing.
     *
     * Generated from protobuf field <code>string request_signing_cert = 9;</code>
     */
    private $request_signing_cert = '';
    /**
     * Generated from protobuf field <code>.sugarcrm.apis.iam.provider.v1alpha.SamlConfig.SigningMethod request_signing_method = 10;</code>
     */
    private $request_signing_method = 0;
    /**
     * Sign AuthN request
     *
     * Generated from protobuf field <code>bool sign_authn_request = 11;</code>
     */
    private $sign_authn_request = false;
    /**
     * Sign logout request
     *
     * Generated from protobuf field <code>bool sign_logout_request = 12;</code>
     */
    private $sign_logout_request = false;
    /**
     * Sign logout response
     *
     * Generated from protobuf field <code>bool sign_logout_response = 13;</code>
     */
    private $sign_logout_response = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $idp_sso_url
     *           IDP single sign on url (Login URL)
     *     @type string $idp_slo_url
     *           IDP single log out URL
     *     @type string $idp_entity_id
     *           Identifier of the IdP entity, should be a valid URI.
     *     @type string $sp_entity_id
     *           Identifier of the Service Provider entity should be a valid URI
     *     @type string $x509_cert
     *           X509 PEM-encoded certificate
     *     @type bool $provision_user
     *           If the authenticated user does not exist one will be created using the
     *           bind attribute as `User.sub_id`.
     *     @type bool $same_window
     *           This option will load SAML login screen in the same window to avoid
     *           pop-up blocking.
     *     @type string $request_signing_pkey
     *           PEM-encoded private key to be used for AuthN/Logout request signing.
     *     @type string $request_signing_cert
     *           PEM-encoded X509 certificate to be used for AuthN/Logout request signing.
     *     @type int $request_signing_method
     *     @type bool $sign_authn_request
     *           Sign AuthN request
     *     @type bool $sign_logout_request
     *           Sign logout request
     *     @type bool $sign_logout_response
     *           Sign logout response
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Apis\Iam\Provider\V1Alpha\Provider::initOnce();
        parent::__construct($data);
    }

    /**
     * IDP single sign on url (Login URL)
     *
     * Generated from protobuf field <code>string idp_sso_url = 1;</code>
     * @return string
     */
    public function getIdpSsoUrl()
    {
        return $this->idp_sso_url;
    }

    /**
     * IDP single sign on url (Login URL)
     *
     * Generated from protobuf field <code>string idp_sso_url = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setIdpSsoUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->idp_sso_url = $var;

        return $this;
    }

    /**
     * IDP single log out URL
     *
     * Generated from protobuf field <code>string idp_slo_url = 2;</code>
     * @return string
     */
    public function getIdpSloUrl()
    {
        return $this->idp_slo_url;
    }

    /**
     * IDP single log out URL
     *
     * Generated from protobuf field <code>string idp_slo_url = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setIdpSloUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->idp_slo_url = $var;

        return $this;
    }

    /**
     * Identifier of the IdP entity, should be a valid URI.
     *
     * Generated from protobuf field <code>string idp_entity_id = 3;</code>
     * @return string
     */
    public function getIdpEntityId()
    {
        return $this->idp_entity_id;
    }

    /**
     * Identifier of the IdP entity, should be a valid URI.
     *
     * Generated from protobuf field <code>string idp_entity_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setIdpEntityId($var)
    {
        GPBUtil::checkString($var, True);
        $this->idp_entity_id = $var;

        return $this;
    }

    /**
     * Identifier of the Service Provider entity should be a valid URI
     *
     * Generated from protobuf field <code>string sp_entity_id = 4;</code>
     * @return string
     */
    public function getSpEntityId()
    {
        return $this->sp_entity_id;
    }

    /**
     * Identifier of the Service Provider entity should be a valid URI
     *
     * Generated from protobuf field <code>string sp_entity_id = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setSpEntityId($var)
    {
        GPBUtil::checkString($var, True);
        $this->sp_entity_id = $var;

        return $this;
    }

    /**
     * X509 PEM-encoded certificate
     *
     * Generated from protobuf field <code>string x509_cert = 5;</code>
     * @return string
     */
    public function getX509Cert()
    {
        return $this->x509_cert;
    }

    /**
     * X509 PEM-encoded certificate
     *
     * Generated from protobuf field <code>string x509_cert = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setX509Cert($var)
    {
        GPBUtil::checkString($var, True);
        $this->x509_cert = $var;

        return $this;
    }

    /**
     * If the authenticated user does not exist one will be created using the
     * bind attribute as `User.sub_id`.
     *
     * Generated from protobuf field <code>bool provision_user = 6;</code>
     * @return bool
     */
    public function getProvisionUser()
    {
        return $this->provision_user;
    }

    /**
     * If the authenticated user does not exist one will be created using the
     * bind attribute as `User.sub_id`.
     *
     * Generated from protobuf field <code>bool provision_user = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setProvisionUser($var)
    {
        GPBUtil::checkBool($var);
        $this->provision_user = $var;

        return $this;
    }

    /**
     * This option will load SAML login screen in the same window to avoid
     * pop-up blocking.
     *
     * Generated from protobuf field <code>bool same_window = 7;</code>
     * @return bool
     */
    public function getSameWindow()
    {
        return $this->same_window;
    }

    /**
     * This option will load SAML login screen in the same window to avoid
     * pop-up blocking.
     *
     * Generated from protobuf field <code>bool same_window = 7;</code>
     * @param bool $var
     * @return $this
     */
    public function setSameWindow($var)
    {
        GPBUtil::checkBool($var);
        $this->same_window = $var;

        return $this;
    }

    /**
     * PEM-encoded private key to be used for AuthN/Logout request signing.
     *
     * Generated from protobuf field <code>string request_signing_pkey = 8;</code>
     * @return string
     */
    public function getRequestSigningPkey()
    {
        return $this->request_signing_pkey;
    }

    /**
     * PEM-encoded private key to be used for AuthN/Logout request signing.
     *
     * Generated from protobuf field <code>string request_signing_pkey = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setRequestSigningPkey($var)
    {
        GPBUtil::checkString($var, True);
        $this->request_signing_pkey = $var;

        return $this;
    }

    /**
     * PEM-encoded X509 certificate to be used for AuthN/Logout request signing.
     *
     * Generated from protobuf field <code>string request_signing_cert = 9;</code>
     * @return string
     */
    public function getRequestSigningCert()
    {
        return $this->request_signing_cert;
    }

    /**
     * PEM-encoded X509 certificate to be used for AuthN/Logout request signing.
     *
     * Generated from protobuf field <code>string request_signing_cert = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setRequestSigningCert($var)
    {
        GPBUtil::checkString($var, True);
        $this->request_signing_cert = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.sugarcrm.apis.iam.provider.v1alpha.SamlConfig.SigningMethod request_signing_method = 10;</code>
     * @return int
     */
    public function getRequestSigningMethod()
    {
        return $this->request_signing_method;
    }

    /**
     * Generated from protobuf field <code>.sugarcrm.apis.iam.provider.v1alpha.SamlConfig.SigningMethod request_signing_method = 10;</code>
     * @param int $var
     * @return $this
     */
    public function setRequestSigningMethod($var)
    {
        GPBUtil::checkEnum($var, \Sugarcrm\Apis\Iam\Provider\V1alpha\SamlConfig_SigningMethod::class);
        $this->request_signing_method = $var;

        return $this;
    }

    /**
     * Sign AuthN request
     *
     * Generated from protobuf field <code>bool sign_authn_request = 11;</code>
     * @return bool
     */
    public function getSignAuthnRequest()
    {
        return $this->sign_authn_request;
    }

    /**
     * Sign AuthN request
     *
     * Generated from protobuf field <code>bool sign_authn_request = 11;</code>
     * @param bool $var
     * @return $this
     */
    public function setSignAuthnRequest($var)
    {
        GPBUtil::checkBool($var);
        $this->sign_authn_request = $var;

        return $this;
    }

    /**
     * Sign logout request
     *
     * Generated from protobuf field <code>bool sign_logout_request = 12;</code>
     * @return bool
     */
    public function getSignLogoutRequest()
    {
        return $this->sign_logout_request;
    }

    /**
     * Sign logout request
     *
     * Generated from protobuf field <code>bool sign_logout_request = 12;</code>
     * @param bool $var
     * @return $this
     */
    public function setSignLogoutRequest($var)
    {
        GPBUtil::checkBool($var);
        $this->sign_logout_request = $var;

        return $this;
    }

    /**
     * Sign logout response
     *
     * Generated from protobuf field <code>bool sign_logout_response = 13;</code>
     * @return bool
     */
    public function getSignLogoutResponse()
    {
        return $this->sign_logout_response;
    }

    /**
     * Sign logout response
     *
     * Generated from protobuf field <code>bool sign_logout_response = 13;</code>
     * @param bool $var
     * @return $this
     */
    public function setSignLogoutResponse($var)
    {
        GPBUtil::checkBool($var);
        $this->sign_logout_response = $var;

        return $this;
    }

}

