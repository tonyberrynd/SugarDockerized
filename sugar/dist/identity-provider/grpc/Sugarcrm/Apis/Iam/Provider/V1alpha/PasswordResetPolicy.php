<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: apis/iam/provider/v1alpha/provider.proto

namespace Sugarcrm\Apis\Iam\Provider\V1alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Forget Password feature allowing users to reset their password.
 * When this feature is enabled, users will receive an email containing
 * a one time valid link to reset their password.
 *
 * Generated from protobuf message <code>sugarcrm.apis.iam.provider.v1alpha.PasswordResetPolicy</code>
 */
class PasswordResetPolicy extends \Google\Protobuf\Internal\Message
{
    /**
     * Enable Forgot Password feature
     *
     * Generated from protobuf field <code>bool enable = 1;</code>
     */
    private $enable = false;
    /**
     * Expiration time of the generated reset link. When set to 0 the link will
     * never expire. Regardless of the expiration time the link can only be
     * used once. Only one password reset link can be active at any given time
     * per user. When a new reset link is generated, the previous one will be
     * removed. The value should be expressed in seconds.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration expiration = 2;</code>
     */
    private $expiration = null;
    /**
     * Require ReCaptcha validation during password reset.
     *
     * Generated from protobuf field <code>bool require_recaptcha = 3;</code>
     */
    private $require_recaptcha = false;
    /**
     * Require honeypot validation
     *
     * Generated from protobuf field <code>bool require_honeypot = 6;</code>
     */
    private $require_honeypot = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $enable
     *           Enable Forgot Password feature
     *     @type \Google\Protobuf\Duration $expiration
     *           Expiration time of the generated reset link. When set to 0 the link will
     *           never expire. Regardless of the expiration time the link can only be
     *           used once. Only one password reset link can be active at any given time
     *           per user. When a new reset link is generated, the previous one will be
     *           removed. The value should be expressed in seconds.
     *     @type bool $require_recaptcha
     *           Require ReCaptcha validation during password reset.
     *     @type bool $require_honeypot
     *           Require honeypot validation
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Apis\Iam\Provider\V1Alpha\Provider::initOnce();
        parent::__construct($data);
    }

    /**
     * Enable Forgot Password feature
     *
     * Generated from protobuf field <code>bool enable = 1;</code>
     * @return bool
     */
    public function getEnable()
    {
        return $this->enable;
    }

    /**
     * Enable Forgot Password feature
     *
     * Generated from protobuf field <code>bool enable = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setEnable($var)
    {
        GPBUtil::checkBool($var);
        $this->enable = $var;

        return $this;
    }

    /**
     * Expiration time of the generated reset link. When set to 0 the link will
     * never expire. Regardless of the expiration time the link can only be
     * used once. Only one password reset link can be active at any given time
     * per user. When a new reset link is generated, the previous one will be
     * removed. The value should be expressed in seconds.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration expiration = 2;</code>
     * @return \Google\Protobuf\Duration
     */
    public function getExpiration()
    {
        return $this->expiration;
    }

    /**
     * Expiration time of the generated reset link. When set to 0 the link will
     * never expire. Regardless of the expiration time the link can only be
     * used once. Only one password reset link can be active at any given time
     * per user. When a new reset link is generated, the previous one will be
     * removed. The value should be expressed in seconds.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration expiration = 2;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setExpiration($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->expiration = $var;

        return $this;
    }

    /**
     * Require ReCaptcha validation during password reset.
     *
     * Generated from protobuf field <code>bool require_recaptcha = 3;</code>
     * @return bool
     */
    public function getRequireRecaptcha()
    {
        return $this->require_recaptcha;
    }

    /**
     * Require ReCaptcha validation during password reset.
     *
     * Generated from protobuf field <code>bool require_recaptcha = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setRequireRecaptcha($var)
    {
        GPBUtil::checkBool($var);
        $this->require_recaptcha = $var;

        return $this;
    }

    /**
     * Require honeypot validation
     *
     * Generated from protobuf field <code>bool require_honeypot = 6;</code>
     * @return bool
     */
    public function getRequireHoneypot()
    {
        return $this->require_honeypot;
    }

    /**
     * Require honeypot validation
     *
     * Generated from protobuf field <code>bool require_honeypot = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setRequireHoneypot($var)
    {
        GPBUtil::checkBool($var);
        $this->require_honeypot = $var;

        return $this;
    }

}

